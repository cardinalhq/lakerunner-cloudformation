Conditions:
  CreateTaskRole: !Equals
    - !Ref 'ExistingTaskRoleArn'
    - ''
  HasStorageProfilesOverride: !Not
    - !Equals
      - !Ref 'StorageProfilesOverride'
      - ''
  UseExistingTaskRole: !Not
    - !Equals
      - !Ref 'ExistingTaskRoleArn'
      - ''
Description: Storage stack for Lakerunner (S3 ingest bucket and SQS queue).
Outputs:
  BucketArn:
    Export:
      Name: !Sub '${AWS::StackName}-BucketArn'
    Value: !GetAtt 'IngestBucket.Arn'
  BucketName:
    Export:
      Name: !Sub '${AWS::StackName}-BucketName'
    Value: !Ref 'IngestBucket'
  TaskRoleArn:
    Description: Task role ARN for storage access (created or existing)
    Export:
      Name: !Sub '${AWS::StackName}-TaskRoleArn'
    Value: !If
      - UseExistingTaskRole
      - !Ref 'ExistingTaskRoleArn'
      - !GetAtt 'StorageTaskRole.Arn'
Parameters:
  ExistingTaskRoleArn:
    Default: ''
    Description: 'OPTIONAL: Existing task role ARN to attach S3/SQS permissions to. Leave blank to create a new role.'
    Type: String
  StorageProfilesOverride:
    Default: ''
    Description: 'OPTIONAL: Custom storage profiles configuration in YAML format. Leave blank to use defaults.'
    Type: String
Resources:
  IngestBucket:
    DeletionPolicy: Delete
    Properties:
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 10
            Prefix: otel-raw/
            Status: Enabled
      NotificationConfiguration:
        QueueConfigurations:
          - Event: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: otel-raw/
            Queue: !GetAtt 'IngestQueue.Arn'
          - Event: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: logs-raw/
            Queue: !GetAtt 'IngestQueue.Arn'
          - Event: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: metrics-raw/
            Queue: !GetAtt 'IngestQueue.Arn'
    Type: AWS::S3::Bucket
  IngestQueue:
    Properties:
      MessageRetentionPeriod: 345600
      QueueName: !Sub '${AWS::StackName}-ingest-queue'
    Type: AWS::SQS::Queue
  IngestQueuePolicy:
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:SendMessage
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref 'AWS::AccountId'
            Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Resource: !GetAtt 'IngestQueue.Arn'
        Version: '2012-10-17'
      Queues:
        - !Ref 'IngestQueue'
    Type: AWS::SQS::QueuePolicy
  S3SQSTaskPolicy:
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:ListBucket
            Effect: Allow
            Resource:
              - !GetAtt 'IngestBucket.Arn'
              - !Sub
                - ${BucketArn}/*
                - BucketArn: !GetAtt 'IngestBucket.Arn'
          - Action:
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Effect: Allow
            Resource: !GetAtt 'IngestQueue.Arn'
        Version: '2012-10-17'
      PolicyName: S3SQSAccess
      Roles:
        - !If
          - UseExistingTaskRole
          - !Select
            - 1
            - !Split
              - /
              - !Ref 'ExistingTaskRoleArn'
          - !Ref 'StorageTaskRole'
    Type: AWS::IAM::Policy
  StorageProfilesParam:
    Properties:
      Description: Storage profiles configuration
      Name: !Sub '/lakerunner/${AWS::StackName}/storage_profiles'
      Type: String
      Value: !If
        - HasStorageProfilesOverride
        - !Ref 'StorageProfilesOverride'
        - !Sub
          - "- bucket: ${BucketName}\n  cloud_provider: aws\n  collector_name: lakerunner\n  insecure_tls: false\n  instance_num: 1\n  organization_id: 12340000-0000-4000-8000-000000000000\n  region: ${AWS::Region}\n\
            \  use_path_style: true\n"
          - BucketName: !Ref 'IngestBucket'
    Type: AWS::SSM::Parameter
  StorageTaskRole:
    Condition: CreateTaskRole
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: '2012-10-17'
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/*'
                  - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}-*'
            Version: '2012-10-17'
          PolicyName: BaseECSTaskPolicy
      RoleName: !Sub '${AWS::StackName}-storage-task-role'
    Type: AWS::IAM::Role

