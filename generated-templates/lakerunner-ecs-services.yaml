Conditions:
  EnableOtlp: !Not
    - !Equals
      - !Ref 'OtelEndpoint'
      - ''
  HasApiKeysOverride: !Not
    - !Equals
      - !Ref 'ApiKeysOverride'
      - ''
  IsInternetFacing: !Equals
    - !Ref 'AlbScheme'
    - internet-facing
Description: 'Lakerunner ECS Services: ECS services, task definitions, IAM roles, and ALB integration'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Infrastructure
        Parameters:
          - ClusterArn
          - DbSecretArn
          - DbHost
          - DbPort
          - TaskSecurityGroupId
          - VpcId
          - PrivateSubnets
          - PublicSubnets
          - BucketArn
          - AlbScheme
          - StorageStackName
      - Label:
          default: Container Images
        Parameters:
          - GoServicesImage
      - Label:
          default: Configuration
        Parameters:
          - OtelEndpoint
          - ApiKeysOverride
    ParameterLabels:
      AlbScheme:
        default: ALB Scheme
      ApiKeysOverride:
        default: API Keys Override
      BucketArn:
        default: Bucket ARN
      ClusterArn:
        default: ECS Cluster ARN
      DbHost:
        default: DB Host
      DbPort:
        default: DB Port
      DbSecretArn:
        default: DB Secret ARN
      GoServicesImage:
        default: Lakerunner Container Image
      OtelEndpoint:
        default: OTEL Collector Endpoint
      PrivateSubnets:
        default: Private Subnets
      PublicSubnets:
        default: Public Subnets
      StorageStackName:
        default: Storage Stack Name
      TaskSecurityGroupId:
        default: Task Security Group
      VpcId:
        default: VPC ID
Outputs:
  AlbArn:
    Export:
      Name: !Sub '${AWS::StackName}-AlbArn'
    Value: !Ref 'Alb'
  AlbDNS:
    Export:
      Name: !Sub '${AWS::StackName}-AlbDNS'
    Value: !GetAtt 'Alb.DNSName'
  ExecutionRoleArn:
    Export:
      Name: !Sub '${AWS::StackName}-ExecutionRoleArn'
    Value: !GetAtt 'ExecRole.Arn'
  ServiceLakerunnerBoxerArn:
    Export:
      Name: !Sub '${AWS::StackName}-lakerunner-boxer-ServiceArn'
    Value: !Ref 'ServiceLakerunnerBoxer'
  ServiceLakerunnerCompactLogsArn:
    Export:
      Name: !Sub '${AWS::StackName}-lakerunner-compact-logs-ServiceArn'
    Value: !Ref 'ServiceLakerunnerCompactLogs'
  ServiceLakerunnerCompactMetricsArn:
    Export:
      Name: !Sub '${AWS::StackName}-lakerunner-compact-metrics-ServiceArn'
    Value: !Ref 'ServiceLakerunnerCompactMetrics'
  ServiceLakerunnerIngestLogsArn:
    Export:
      Name: !Sub '${AWS::StackName}-lakerunner-ingest-logs-ServiceArn'
    Value: !Ref 'ServiceLakerunnerIngestLogs'
  ServiceLakerunnerIngestMetricsArn:
    Export:
      Name: !Sub '${AWS::StackName}-lakerunner-ingest-metrics-ServiceArn'
    Value: !Ref 'ServiceLakerunnerIngestMetrics'
  ServiceLakerunnerPubsubSqsArn:
    Export:
      Name: !Sub '${AWS::StackName}-lakerunner-pubsub-sqs-ServiceArn'
    Value: !Ref 'ServiceLakerunnerPubsubSqs'
  ServiceLakerunnerQueryApiArn:
    Export:
      Name: !Sub '${AWS::StackName}-lakerunner-query-api-ServiceArn'
    Value: !Ref 'ServiceLakerunnerQueryApi'
  ServiceLakerunnerQueryWorkerArn:
    Export:
      Name: !Sub '${AWS::StackName}-lakerunner-query-worker-ServiceArn'
    Value: !Ref 'ServiceLakerunnerQueryWorker'
  ServiceLakerunnerRollupMetricsArn:
    Export:
      Name: !Sub '${AWS::StackName}-lakerunner-rollup-metrics-ServiceArn'
    Value: !Ref 'ServiceLakerunnerRollupMetrics'
  ServiceLakerunnerSweeperArn:
    Export:
      Name: !Sub '${AWS::StackName}-lakerunner-sweeper-ServiceArn'
    Value: !Ref 'ServiceLakerunnerSweeper'
  TaskRoleArn:
    Export:
      Name: !Sub '${AWS::StackName}-TaskRoleArn'
    Value: !GetAtt 'TaskRole.Arn'
  Tg7101Arn:
    Export:
      Name: !Sub '${AWS::StackName}-Tg7101Arn'
    Value: !Ref 'Tg7101'
Parameters:
  AlbScheme:
    AllowedValues:
      - internet-facing
      - internal
    Default: internal
    Description: 'Load balancer scheme: ''internet-facing'' for external access or ''internal'' for internal access only.'
    Type: String
  ApiKeysOverride:
    Default: ''
    Description: 'OPTIONAL: Custom API keys configuration in YAML format. Leave blank to use defaults.'
    Type: String
  BucketArn:
    Description: 'REQUIRED: ARN of the ingest bucket.'
    Type: String
  ClusterArn:
    Description: 'REQUIRED: ARN of the ECS cluster hosting the services.'
    Type: String
  DbHost:
    Description: 'REQUIRED: Database endpoint hostname.'
    Type: String
  DbPort:
    Description: 'REQUIRED: Database port number.'
    Type: String
  DbSecretArn:
    Description: 'REQUIRED: ARN of the database credentials secret.'
    Type: String
  GoServicesImage:
    Default: public.ecr.aws/cardinalhq.io/lakerunner:v1.4.2-rc3
    Description: Container image for all Lakerunner services
    Type: String
  MSKClusterArn:
    Default: ''
    Description: 'OPTIONAL: MSK cluster ARN for Kafka operations.'
    Type: String
  MSKCredentialsArn:
    Default: ''
    Description: 'OPTIONAL: MSK credentials secret ARN.'
    Type: String
  OtelEndpoint:
    Default: ''
    Description: 'OPTIONAL: OTEL collector HTTP endpoint URL (e.g., http://collector-dns:4318). Leave blank to disable OTLP telemetry export.'
    Type: String
  PrivateSubnets:
    Description: 'REQUIRED: Private subnet IDs for tasks.'
    Type: List<AWS::EC2::Subnet::Id>
  PublicSubnets:
    Default: ''
    Description: 'OPTIONAL: Public subnets for ALB (required if AlbScheme is internet-facing).'
    Type: CommaDelimitedList
  StorageStackName:
    Description: 'REQUIRED: Name of the storage stack for parameter references.'
    Type: String
  TaskSecurityGroupId:
    Description: 'REQUIRED: Security group used by ECS tasks.'
    Type: AWS::EC2::SecurityGroup::Id
  VpcId:
    Description: 'REQUIRED: VPC where services run.'
    Type: AWS::EC2::VPC::Id
Resources:
  Alb:
    Properties:
      Scheme: !Ref 'AlbScheme'
      SecurityGroups:
        - !Ref 'AlbSecurityGroup'
      Subnets: !If
        - IsInternetFacing
        - !Ref 'PublicSubnets'
        - !Ref 'PrivateSubnets'
      Type: application
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
  Alb7101Open:
    Properties:
      CidrIp: '0.0.0.0/0'
      Description: HTTP 7101
      FromPort: 7101
      GroupId: !Ref 'AlbSecurityGroup'
      IpProtocol: tcp
      ToPort: 7101
    Type: AWS::EC2::SecurityGroupIngress
  AlbSecurityGroup:
    Properties:
      GroupDescription: Security group for ALB
      SecurityGroupEgress:
        - CidrIp: '0.0.0.0/0'
          Description: Allow all outbound
          IpProtocol: '-1'
      VpcId: !Ref 'VpcId'
    Type: AWS::EC2::SecurityGroup
  ApiKeysParam:
    Properties:
      Description: API keys configuration for Lakerunner services
      Name: !Sub '/lakerunner/${AWS::StackName}/api_keys'
      Type: String
      Value: !If
        - HasApiKeysOverride
        - !Ref 'ApiKeysOverride'
        - "- keys:\n  - f70603aa00e6f67999cc66e336134887\n  organization_id: 12340000-0000-4000-8000-000000000000\n"
    Type: AWS::SSM::Parameter
  ExecRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/*'
                  - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}-*'
              - Action:
                  - ssmmessages:CreateControlChannel
                  - ssmmessages:CreateDataChannel
                  - ssmmessages:OpenControlChannel
                  - ssmmessages:OpenDataChannel
                Effect: Allow
                Resource: '*'
              - Action:
                  - secretsmanager:GetSecretValue
                Effect: Allow
                Resource:
                  - !Sub
                    - ${SecretArn}*
                    - SecretArn: !Ref 'DbSecretArn'
                  - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${AWS::StackName}-*'
            Version: '2012-10-17'
          PolicyName: SSMParameterAccess
      RoleName: !Sub '${AWS::StackName}-exec-role'
    Type: AWS::IAM::Role
  Listener7101:
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref 'Tg7101'
          Type: forward
      LoadBalancerArn: !Ref 'Alb'
      Port: '7101'
      Protocol: HTTP
    Type: AWS::ElasticLoadBalancingV2::Listener
  LogGroupLakerunnerBoxer:
    Properties:
      LogGroupName: !Sub '/ecs/lakerunner-boxer'
      RetentionInDays: 14
    Type: AWS::Logs::LogGroup
  LogGroupLakerunnerCompactLogs:
    Properties:
      LogGroupName: !Sub '/ecs/lakerunner-compact-logs'
      RetentionInDays: 14
    Type: AWS::Logs::LogGroup
  LogGroupLakerunnerCompactMetrics:
    Properties:
      LogGroupName: !Sub '/ecs/lakerunner-compact-metrics'
      RetentionInDays: 14
    Type: AWS::Logs::LogGroup
  LogGroupLakerunnerIngestLogs:
    Properties:
      LogGroupName: !Sub '/ecs/lakerunner-ingest-logs'
      RetentionInDays: 14
    Type: AWS::Logs::LogGroup
  LogGroupLakerunnerIngestMetrics:
    Properties:
      LogGroupName: !Sub '/ecs/lakerunner-ingest-metrics'
      RetentionInDays: 14
    Type: AWS::Logs::LogGroup
  LogGroupLakerunnerPubsubSqs:
    Properties:
      LogGroupName: !Sub '/ecs/lakerunner-pubsub-sqs'
      RetentionInDays: 14
    Type: AWS::Logs::LogGroup
  LogGroupLakerunnerQueryApi:
    Properties:
      LogGroupName: !Sub '/ecs/lakerunner-query-api'
      RetentionInDays: 14
    Type: AWS::Logs::LogGroup
  LogGroupLakerunnerQueryWorker:
    Properties:
      LogGroupName: !Sub '/ecs/lakerunner-query-worker'
      RetentionInDays: 14
    Type: AWS::Logs::LogGroup
  LogGroupLakerunnerRollupMetrics:
    Properties:
      LogGroupName: !Sub '/ecs/lakerunner-rollup-metrics'
      RetentionInDays: 14
    Type: AWS::Logs::LogGroup
  LogGroupLakerunnerSweeper:
    Properties:
      LogGroupName: !Sub '/ecs/lakerunner-sweeper'
      RetentionInDays: 14
    Type: AWS::Logs::LogGroup
  QueryApiTaskRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: '2012-10-17'
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Effect: Allow
                Resource:
                  - !Ref 'BucketArn'
                  - !Sub
                    - ${BucketArn}/*
                    - BucketArn: !Ref 'BucketArn'
              - Action:
                  - secretsmanager:GetSecretValue
                Effect: Allow
                Resource:
                  - !Sub
                    - ${SecretArn}*
                    - SecretArn: !Ref 'DbSecretArn'
                  - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${AWS::StackName}-*'
              - Action:
                  - ecs:ListServices
                  - ecs:DescribeServices
                  - ecs:ListTasks
                  - ecs:DescribeTasks
                Effect: Allow
                Resource: '*'
              - Action:
                  - elasticfilesystem:ClientMount
                  - elasticfilesystem:ClientWrite
                  - elasticfilesystem:ClientRootAccess
                  - elasticfilesystem:DescribeFileSystems
                  - elasticfilesystem:DescribeMountTargets
                  - elasticfilesystem:DescribeAccessPoints
                Effect: Allow
                Resource: '*'
            Version: '2012-10-17'
          PolicyName: QueryApiAccess
      RoleName: !Sub '${AWS::StackName}-query-api-task-role'
    Type: AWS::IAM::Role
  QueryWorkerTaskRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: '2012-10-17'
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Effect: Allow
                Resource:
                  - !Ref 'BucketArn'
                  - !Sub
                    - ${BucketArn}/*
                    - BucketArn: !Ref 'BucketArn'
              - Action:
                  - secretsmanager:GetSecretValue
                Effect: Allow
                Resource:
                  - !Sub
                    - ${SecretArn}*
                    - SecretArn: !Ref 'DbSecretArn'
                  - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${AWS::StackName}-*'
              - Action:
                  - elasticfilesystem:ClientMount
                  - elasticfilesystem:ClientWrite
                  - elasticfilesystem:ClientRootAccess
                  - elasticfilesystem:DescribeFileSystems
                  - elasticfilesystem:DescribeMountTargets
                  - elasticfilesystem:DescribeAccessPoints
                Effect: Allow
                Resource: '*'
            Version: '2012-10-17'
          PolicyName: QueryWorkerAccess
      RoleName: !Sub '${AWS::StackName}-query-worker-task-role'
    Type: AWS::IAM::Role
  ServiceLakerunnerBoxer:
    Properties:
      Cluster: !Ref 'ClusterArn'
      DesiredCount: '1'
      EnableExecuteCommand: true
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !Ref 'TaskSecurityGroupId'
          Subnets: !Ref 'PrivateSubnets'
      ServiceName: lakerunner-boxer
      TaskDefinition: !Ref 'TaskDefLakerunnerBoxer'
    Type: AWS::ECS::Service
  ServiceLakerunnerCompactLogs:
    Properties:
      Cluster: !Ref 'ClusterArn'
      DesiredCount: '4'
      EnableExecuteCommand: true
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !Ref 'TaskSecurityGroupId'
          Subnets: !Ref 'PrivateSubnets'
      ServiceName: lakerunner-compact-logs
      TaskDefinition: !Ref 'TaskDefLakerunnerCompactLogs'
    Type: AWS::ECS::Service
  ServiceLakerunnerCompactMetrics:
    Properties:
      Cluster: !Ref 'ClusterArn'
      DesiredCount: '1'
      EnableExecuteCommand: true
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !Ref 'TaskSecurityGroupId'
          Subnets: !Ref 'PrivateSubnets'
      ServiceName: lakerunner-compact-metrics
      TaskDefinition: !Ref 'TaskDefLakerunnerCompactMetrics'
    Type: AWS::ECS::Service
  ServiceLakerunnerIngestLogs:
    Properties:
      Cluster: !Ref 'ClusterArn'
      DesiredCount: '2'
      EnableExecuteCommand: true
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !Ref 'TaskSecurityGroupId'
          Subnets: !Ref 'PrivateSubnets'
      ServiceName: lakerunner-ingest-logs
      TaskDefinition: !Ref 'TaskDefLakerunnerIngestLogs'
    Type: AWS::ECS::Service
  ServiceLakerunnerIngestMetrics:
    Properties:
      Cluster: !Ref 'ClusterArn'
      DesiredCount: '1'
      EnableExecuteCommand: true
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !Ref 'TaskSecurityGroupId'
          Subnets: !Ref 'PrivateSubnets'
      ServiceName: lakerunner-ingest-metrics
      TaskDefinition: !Ref 'TaskDefLakerunnerIngestMetrics'
    Type: AWS::ECS::Service
  ServiceLakerunnerPubsubSqs:
    Properties:
      Cluster: !Ref 'ClusterArn'
      DesiredCount: '1'
      EnableExecuteCommand: true
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !Ref 'TaskSecurityGroupId'
          Subnets: !Ref 'PrivateSubnets'
      ServiceName: lakerunner-pubsub-sqs
      TaskDefinition: !Ref 'TaskDefLakerunnerPubsubSqs'
    Type: AWS::ECS::Service
  ServiceLakerunnerQueryApi:
    DependsOn:
      - Listener7101
    Properties:
      Cluster: !Ref 'ClusterArn'
      DesiredCount: '1'
      EnableExecuteCommand: true
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: AppContainer
          ContainerPort: 7101
          TargetGroupArn: !Ref 'Tg7101'
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !Ref 'TaskSecurityGroupId'
          Subnets: !Ref 'PrivateSubnets'
      ServiceName: lakerunner-query-api
      TaskDefinition: !Ref 'TaskDefLakerunnerQueryApi'
    Type: AWS::ECS::Service
  ServiceLakerunnerQueryWorker:
    Properties:
      Cluster: !Ref 'ClusterArn'
      DesiredCount: '2'
      EnableExecuteCommand: true
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !Ref 'TaskSecurityGroupId'
          Subnets: !Ref 'PrivateSubnets'
      ServiceName: lakerunner-query-worker
      TaskDefinition: !Ref 'TaskDefLakerunnerQueryWorker'
    Type: AWS::ECS::Service
  ServiceLakerunnerRollupMetrics:
    Properties:
      Cluster: !Ref 'ClusterArn'
      DesiredCount: '1'
      EnableExecuteCommand: true
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !Ref 'TaskSecurityGroupId'
          Subnets: !Ref 'PrivateSubnets'
      ServiceName: lakerunner-rollup-metrics
      TaskDefinition: !Ref 'TaskDefLakerunnerRollupMetrics'
    Type: AWS::ECS::Service
  ServiceLakerunnerSweeper:
    Properties:
      Cluster: !Ref 'ClusterArn'
      DesiredCount: '1'
      EnableExecuteCommand: true
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !Ref 'TaskSecurityGroupId'
          Subnets: !Ref 'PrivateSubnets'
      ServiceName: lakerunner-sweeper
      TaskDefinition: !Ref 'TaskDefLakerunnerSweeper'
    Type: AWS::ECS::Service
  TaskDefLakerunnerBoxer:
    Properties:
      ContainerDefinitions:
        - Command:
            - /app/bin/lakerunner
            - boxer
            - --all
          Environment:
            - Name: OTEL_SERVICE_NAME
              Value: lakerunner-boxer
            - Name: TMPDIR
              Value: /scratch
            - Name: HOME
              Value: /scratch
            - Name: STORAGE_PROFILE_FILE
              Value: env:STORAGE_PROFILES_ENV
            - Name: API_KEYS_FILE
              Value: env:API_KEYS_ENV
            - Name: SQS_QUEUE_URL
              Value: !Sub 'https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/lakerunner-ingest-queue'
            - Name: SQS_REGION
              Value: !Ref 'AWS::Region'
            - Name: LRDB_HOST
              Value: !Ref 'DbHost'
            - Name: LRDB_PORT
              Value: !Ref 'DbPort'
            - Name: LRDB_DBNAME
              Value: lakerunner
            - Name: LRDB_USER
              Value: lakerunner
            - Name: LRDB_SSLMODE
              Value: require
            - Name: CONFIGDB_HOST
              Value: !Ref 'DbHost'
            - Name: CONFIGDB_PORT
              Value: !Ref 'DbPort'
            - Name: CONFIGDB_DBNAME
              Value: lakerunner
            - Name: CONFIGDB_USER
              Value: lakerunner
            - Name: CONFIGDB_SSLMODE
              Value: require
            - Name: LAKERUNNER_KAFKA_TLS_ENABLED
              Value: 'true'
            - Name: LAKERUNNER_KAFKA_SASL_ENABLED
              Value: 'true'
            - Name: LAKERUNNER_KAFKA_SASL_MECHANISM
              Value: SCRAM-SHA-512
            - Name: LAKERUNNER_KAFKA_TOPICS_DEFAULTS_REPLICATIONFACTOR
              Value: '2'
            - Name: OTEL_EXPORTER_OTLP_ENDPOINT
              Value: !If
                - EnableOtlp
                - !Ref 'OtelEndpoint'
                - !Ref 'AWS::NoValue'
            - Name: ENABLE_OTLP_TELEMETRY
              Value: !If
                - EnableOtlp
                - 'true'
                - !Ref 'AWS::NoValue'
          HealthCheck:
            Command:
              - /app/bin/lakerunner
              - sysinfo
            Interval: 30
            Retries: 3
            StartPeriod: 60
            Timeout: 5
          Image: !Ref 'GoServicesImage'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref 'LogGroupLakerunnerBoxer'
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: lakerunner-boxer
          MountPoints:
            - ContainerPath: /scratch
              ReadOnly: false
              SourceVolume: scratch
          Name: AppContainer
          PortMappings: []
          Secrets:
            - Name: STORAGE_PROFILES_ENV
              ValueFrom: !Sub
                - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/${StorageStackName}/storage_profiles
                - StorageStackName: !Ref 'StorageStackName'
            - Name: API_KEYS_ENV
              ValueFrom: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/${AWS::StackName}/api_keys'
            - Name: LRDB_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'DbSecretArn'
            - Name: CONFIGDB_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'DbSecretArn'
            - Name: LAKERUNNER_KAFKA_SASL_USERNAME
              ValueFrom: !Sub
                - '${SecretArn}:username::'
                - SecretArn: !Ref 'MSKCredentialsArn'
            - Name: LAKERUNNER_KAFKA_SASL_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'MSKCredentialsArn'
          User: '0'
      Cpu: '256'
      ExecutionRoleArn: !GetAtt 'ExecRole.Arn'
      Family: lakerunner-boxer-task
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      TaskRoleArn: !GetAtt 'TaskRole.Arn'
      Volumes:
        - Name: scratch
    Type: AWS::ECS::TaskDefinition
  TaskDefLakerunnerCompactLogs:
    Properties:
      ContainerDefinitions:
        - Command:
            - /app/bin/lakerunner
            - compact-logs
          Environment:
            - Name: OTEL_SERVICE_NAME
              Value: lakerunner-compact-logs
            - Name: TMPDIR
              Value: /scratch
            - Name: HOME
              Value: /scratch
            - Name: STORAGE_PROFILE_FILE
              Value: env:STORAGE_PROFILES_ENV
            - Name: API_KEYS_FILE
              Value: env:API_KEYS_ENV
            - Name: SQS_QUEUE_URL
              Value: !Sub 'https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/lakerunner-ingest-queue'
            - Name: SQS_REGION
              Value: !Ref 'AWS::Region'
            - Name: LRDB_HOST
              Value: !Ref 'DbHost'
            - Name: LRDB_PORT
              Value: !Ref 'DbPort'
            - Name: LRDB_DBNAME
              Value: lakerunner
            - Name: LRDB_USER
              Value: lakerunner
            - Name: LRDB_SSLMODE
              Value: require
            - Name: CONFIGDB_HOST
              Value: !Ref 'DbHost'
            - Name: CONFIGDB_PORT
              Value: !Ref 'DbPort'
            - Name: CONFIGDB_DBNAME
              Value: lakerunner
            - Name: CONFIGDB_USER
              Value: lakerunner
            - Name: CONFIGDB_SSLMODE
              Value: require
            - Name: LAKERUNNER_KAFKA_TLS_ENABLED
              Value: 'true'
            - Name: LAKERUNNER_KAFKA_SASL_ENABLED
              Value: 'true'
            - Name: LAKERUNNER_KAFKA_SASL_MECHANISM
              Value: SCRAM-SHA-512
            - Name: LAKERUNNER_KAFKA_TOPICS_DEFAULTS_REPLICATIONFACTOR
              Value: '2'
            - Name: OTEL_EXPORTER_OTLP_ENDPOINT
              Value: !If
                - EnableOtlp
                - !Ref 'OtelEndpoint'
                - !Ref 'AWS::NoValue'
            - Name: ENABLE_OTLP_TELEMETRY
              Value: !If
                - EnableOtlp
                - 'true'
                - !Ref 'AWS::NoValue'
          HealthCheck:
            Command:
              - /app/bin/lakerunner
              - sysinfo
            Interval: 30
            Retries: 3
            StartPeriod: 60
            Timeout: 5
          Image: !Ref 'GoServicesImage'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref 'LogGroupLakerunnerCompactLogs'
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: lakerunner-compact-logs
          MountPoints:
            - ContainerPath: /scratch
              ReadOnly: false
              SourceVolume: scratch
          Name: AppContainer
          PortMappings: []
          Secrets:
            - Name: STORAGE_PROFILES_ENV
              ValueFrom: !Sub
                - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/${StorageStackName}/storage_profiles
                - StorageStackName: !Ref 'StorageStackName'
            - Name: API_KEYS_ENV
              ValueFrom: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/${AWS::StackName}/api_keys'
            - Name: LRDB_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'DbSecretArn'
            - Name: CONFIGDB_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'DbSecretArn'
            - Name: LAKERUNNER_KAFKA_SASL_USERNAME
              ValueFrom: !Sub
                - '${SecretArn}:username::'
                - SecretArn: !Ref 'MSKCredentialsArn'
            - Name: LAKERUNNER_KAFKA_SASL_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'MSKCredentialsArn'
          User: '0'
      Cpu: '1024'
      ExecutionRoleArn: !GetAtt 'ExecRole.Arn'
      Family: lakerunner-compact-logs-task
      Memory: '2048'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      TaskRoleArn: !GetAtt 'TaskRole.Arn'
      Volumes:
        - Name: scratch
    Type: AWS::ECS::TaskDefinition
  TaskDefLakerunnerCompactMetrics:
    Properties:
      ContainerDefinitions:
        - Command:
            - /app/bin/lakerunner
            - compact-metrics
          Environment:
            - Name: OTEL_SERVICE_NAME
              Value: lakerunner-compact-metrics
            - Name: TMPDIR
              Value: /scratch
            - Name: HOME
              Value: /scratch
            - Name: STORAGE_PROFILE_FILE
              Value: env:STORAGE_PROFILES_ENV
            - Name: API_KEYS_FILE
              Value: env:API_KEYS_ENV
            - Name: SQS_QUEUE_URL
              Value: !Sub 'https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/lakerunner-ingest-queue'
            - Name: SQS_REGION
              Value: !Ref 'AWS::Region'
            - Name: LRDB_HOST
              Value: !Ref 'DbHost'
            - Name: LRDB_PORT
              Value: !Ref 'DbPort'
            - Name: LRDB_DBNAME
              Value: lakerunner
            - Name: LRDB_USER
              Value: lakerunner
            - Name: LRDB_SSLMODE
              Value: require
            - Name: CONFIGDB_HOST
              Value: !Ref 'DbHost'
            - Name: CONFIGDB_PORT
              Value: !Ref 'DbPort'
            - Name: CONFIGDB_DBNAME
              Value: lakerunner
            - Name: CONFIGDB_USER
              Value: lakerunner
            - Name: CONFIGDB_SSLMODE
              Value: require
            - Name: LAKERUNNER_KAFKA_TLS_ENABLED
              Value: 'true'
            - Name: LAKERUNNER_KAFKA_SASL_ENABLED
              Value: 'true'
            - Name: LAKERUNNER_KAFKA_SASL_MECHANISM
              Value: SCRAM-SHA-512
            - Name: LAKERUNNER_KAFKA_TOPICS_DEFAULTS_REPLICATIONFACTOR
              Value: '2'
            - Name: OTEL_EXPORTER_OTLP_ENDPOINT
              Value: !If
                - EnableOtlp
                - !Ref 'OtelEndpoint'
                - !Ref 'AWS::NoValue'
            - Name: ENABLE_OTLP_TELEMETRY
              Value: !If
                - EnableOtlp
                - 'true'
                - !Ref 'AWS::NoValue'
          HealthCheck:
            Command:
              - /app/bin/lakerunner
              - sysinfo
            Interval: 30
            Retries: 3
            StartPeriod: 60
            Timeout: 5
          Image: !Ref 'GoServicesImage'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref 'LogGroupLakerunnerCompactMetrics'
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: lakerunner-compact-metrics
          MountPoints:
            - ContainerPath: /scratch
              ReadOnly: false
              SourceVolume: scratch
          Name: AppContainer
          PortMappings: []
          Secrets:
            - Name: STORAGE_PROFILES_ENV
              ValueFrom: !Sub
                - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/${StorageStackName}/storage_profiles
                - StorageStackName: !Ref 'StorageStackName'
            - Name: API_KEYS_ENV
              ValueFrom: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/${AWS::StackName}/api_keys'
            - Name: LRDB_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'DbSecretArn'
            - Name: CONFIGDB_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'DbSecretArn'
            - Name: LAKERUNNER_KAFKA_SASL_USERNAME
              ValueFrom: !Sub
                - '${SecretArn}:username::'
                - SecretArn: !Ref 'MSKCredentialsArn'
            - Name: LAKERUNNER_KAFKA_SASL_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'MSKCredentialsArn'
          User: '0'
      Cpu: '1024'
      ExecutionRoleArn: !GetAtt 'ExecRole.Arn'
      Family: lakerunner-compact-metrics-task
      Memory: '2048'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      TaskRoleArn: !GetAtt 'TaskRole.Arn'
      Volumes:
        - Name: scratch
    Type: AWS::ECS::TaskDefinition
  TaskDefLakerunnerIngestLogs:
    Properties:
      ContainerDefinitions:
        - Command:
            - /app/bin/lakerunner
            - ingest-logs
          Environment:
            - Name: OTEL_SERVICE_NAME
              Value: lakerunner-ingest-logs
            - Name: TMPDIR
              Value: /scratch
            - Name: HOME
              Value: /scratch
            - Name: STORAGE_PROFILE_FILE
              Value: env:STORAGE_PROFILES_ENV
            - Name: API_KEYS_FILE
              Value: env:API_KEYS_ENV
            - Name: SQS_QUEUE_URL
              Value: !Sub 'https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/lakerunner-ingest-queue'
            - Name: SQS_REGION
              Value: !Ref 'AWS::Region'
            - Name: LRDB_HOST
              Value: !Ref 'DbHost'
            - Name: LRDB_PORT
              Value: !Ref 'DbPort'
            - Name: LRDB_DBNAME
              Value: lakerunner
            - Name: LRDB_USER
              Value: lakerunner
            - Name: LRDB_SSLMODE
              Value: require
            - Name: CONFIGDB_HOST
              Value: !Ref 'DbHost'
            - Name: CONFIGDB_PORT
              Value: !Ref 'DbPort'
            - Name: CONFIGDB_DBNAME
              Value: lakerunner
            - Name: CONFIGDB_USER
              Value: lakerunner
            - Name: CONFIGDB_SSLMODE
              Value: require
            - Name: LAKERUNNER_KAFKA_TLS_ENABLED
              Value: 'true'
            - Name: LAKERUNNER_KAFKA_SASL_ENABLED
              Value: 'true'
            - Name: LAKERUNNER_KAFKA_SASL_MECHANISM
              Value: SCRAM-SHA-512
            - Name: LAKERUNNER_KAFKA_TOPICS_DEFAULTS_REPLICATIONFACTOR
              Value: '2'
            - Name: OTEL_EXPORTER_OTLP_ENDPOINT
              Value: !If
                - EnableOtlp
                - !Ref 'OtelEndpoint'
                - !Ref 'AWS::NoValue'
            - Name: ENABLE_OTLP_TELEMETRY
              Value: !If
                - EnableOtlp
                - 'true'
                - !Ref 'AWS::NoValue'
          HealthCheck:
            Command:
              - /app/bin/lakerunner
              - sysinfo
            Interval: 30
            Retries: 3
            StartPeriod: 60
            Timeout: 5
          Image: !Ref 'GoServicesImage'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref 'LogGroupLakerunnerIngestLogs'
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: lakerunner-ingest-logs
          MountPoints:
            - ContainerPath: /scratch
              ReadOnly: false
              SourceVolume: scratch
          Name: AppContainer
          PortMappings: []
          Secrets:
            - Name: STORAGE_PROFILES_ENV
              ValueFrom: !Sub
                - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/${StorageStackName}/storage_profiles
                - StorageStackName: !Ref 'StorageStackName'
            - Name: API_KEYS_ENV
              ValueFrom: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/${AWS::StackName}/api_keys'
            - Name: LRDB_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'DbSecretArn'
            - Name: CONFIGDB_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'DbSecretArn'
            - Name: LAKERUNNER_KAFKA_SASL_USERNAME
              ValueFrom: !Sub
                - '${SecretArn}:username::'
                - SecretArn: !Ref 'MSKCredentialsArn'
            - Name: LAKERUNNER_KAFKA_SASL_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'MSKCredentialsArn'
          User: '0'
      Cpu: '1024'
      ExecutionRoleArn: !GetAtt 'ExecRole.Arn'
      Family: lakerunner-ingest-logs-task
      Memory: '2048'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      TaskRoleArn: !GetAtt 'TaskRole.Arn'
      Volumes:
        - Name: scratch
    Type: AWS::ECS::TaskDefinition
  TaskDefLakerunnerIngestMetrics:
    Properties:
      ContainerDefinitions:
        - Command:
            - /app/bin/lakerunner
            - ingest-metrics
          Environment:
            - Name: OTEL_SERVICE_NAME
              Value: lakerunner-ingest-metrics
            - Name: TMPDIR
              Value: /scratch
            - Name: HOME
              Value: /scratch
            - Name: STORAGE_PROFILE_FILE
              Value: env:STORAGE_PROFILES_ENV
            - Name: API_KEYS_FILE
              Value: env:API_KEYS_ENV
            - Name: SQS_QUEUE_URL
              Value: !Sub 'https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/lakerunner-ingest-queue'
            - Name: SQS_REGION
              Value: !Ref 'AWS::Region'
            - Name: LRDB_HOST
              Value: !Ref 'DbHost'
            - Name: LRDB_PORT
              Value: !Ref 'DbPort'
            - Name: LRDB_DBNAME
              Value: lakerunner
            - Name: LRDB_USER
              Value: lakerunner
            - Name: LRDB_SSLMODE
              Value: require
            - Name: CONFIGDB_HOST
              Value: !Ref 'DbHost'
            - Name: CONFIGDB_PORT
              Value: !Ref 'DbPort'
            - Name: CONFIGDB_DBNAME
              Value: lakerunner
            - Name: CONFIGDB_USER
              Value: lakerunner
            - Name: CONFIGDB_SSLMODE
              Value: require
            - Name: LAKERUNNER_KAFKA_TLS_ENABLED
              Value: 'true'
            - Name: LAKERUNNER_KAFKA_SASL_ENABLED
              Value: 'true'
            - Name: LAKERUNNER_KAFKA_SASL_MECHANISM
              Value: SCRAM-SHA-512
            - Name: LAKERUNNER_KAFKA_TOPICS_DEFAULTS_REPLICATIONFACTOR
              Value: '2'
            - Name: OTEL_EXPORTER_OTLP_ENDPOINT
              Value: !If
                - EnableOtlp
                - !Ref 'OtelEndpoint'
                - !Ref 'AWS::NoValue'
            - Name: ENABLE_OTLP_TELEMETRY
              Value: !If
                - EnableOtlp
                - 'true'
                - !Ref 'AWS::NoValue'
          HealthCheck:
            Command:
              - /app/bin/lakerunner
              - sysinfo
            Interval: 30
            Retries: 3
            StartPeriod: 60
            Timeout: 5
          Image: !Ref 'GoServicesImage'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref 'LogGroupLakerunnerIngestMetrics'
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: lakerunner-ingest-metrics
          MountPoints:
            - ContainerPath: /scratch
              ReadOnly: false
              SourceVolume: scratch
          Name: AppContainer
          PortMappings: []
          Secrets:
            - Name: STORAGE_PROFILES_ENV
              ValueFrom: !Sub
                - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/${StorageStackName}/storage_profiles
                - StorageStackName: !Ref 'StorageStackName'
            - Name: API_KEYS_ENV
              ValueFrom: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/${AWS::StackName}/api_keys'
            - Name: LRDB_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'DbSecretArn'
            - Name: CONFIGDB_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'DbSecretArn'
            - Name: LAKERUNNER_KAFKA_SASL_USERNAME
              ValueFrom: !Sub
                - '${SecretArn}:username::'
                - SecretArn: !Ref 'MSKCredentialsArn'
            - Name: LAKERUNNER_KAFKA_SASL_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'MSKCredentialsArn'
          User: '0'
      Cpu: '1024'
      ExecutionRoleArn: !GetAtt 'ExecRole.Arn'
      Family: lakerunner-ingest-metrics-task
      Memory: '2048'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      TaskRoleArn: !GetAtt 'TaskRole.Arn'
      Volumes:
        - Name: scratch
    Type: AWS::ECS::TaskDefinition
  TaskDefLakerunnerPubsubSqs:
    Properties:
      ContainerDefinitions:
        - Command:
            - /app/bin/lakerunner
            - pubsub
            - sqs
          Environment:
            - Name: OTEL_SERVICE_NAME
              Value: lakerunner-pubsub-sqs
            - Name: TMPDIR
              Value: /scratch
            - Name: HOME
              Value: /scratch
            - Name: STORAGE_PROFILE_FILE
              Value: env:STORAGE_PROFILES_ENV
            - Name: API_KEYS_FILE
              Value: env:API_KEYS_ENV
            - Name: SQS_QUEUE_URL
              Value: !Sub 'https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/lakerunner-ingest-queue'
            - Name: SQS_REGION
              Value: !Ref 'AWS::Region'
            - Name: LRDB_HOST
              Value: !Ref 'DbHost'
            - Name: LRDB_PORT
              Value: !Ref 'DbPort'
            - Name: LRDB_DBNAME
              Value: lakerunner
            - Name: LRDB_USER
              Value: lakerunner
            - Name: LRDB_SSLMODE
              Value: require
            - Name: CONFIGDB_HOST
              Value: !Ref 'DbHost'
            - Name: CONFIGDB_PORT
              Value: !Ref 'DbPort'
            - Name: CONFIGDB_DBNAME
              Value: lakerunner
            - Name: CONFIGDB_USER
              Value: lakerunner
            - Name: CONFIGDB_SSLMODE
              Value: require
            - Name: LAKERUNNER_KAFKA_TLS_ENABLED
              Value: 'true'
            - Name: LAKERUNNER_KAFKA_SASL_ENABLED
              Value: 'true'
            - Name: LAKERUNNER_KAFKA_SASL_MECHANISM
              Value: SCRAM-SHA-512
            - Name: LAKERUNNER_KAFKA_TOPICS_DEFAULTS_REPLICATIONFACTOR
              Value: '2'
            - Name: OTEL_EXPORTER_OTLP_ENDPOINT
              Value: !If
                - EnableOtlp
                - !Ref 'OtelEndpoint'
                - !Ref 'AWS::NoValue'
            - Name: ENABLE_OTLP_TELEMETRY
              Value: !If
                - EnableOtlp
                - 'true'
                - !Ref 'AWS::NoValue'
          HealthCheck:
            Command:
              - /app/bin/lakerunner
              - sysinfo
            Interval: 30
            Retries: 3
            StartPeriod: 60
            Timeout: 5
          Image: !Ref 'GoServicesImage'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref 'LogGroupLakerunnerPubsubSqs'
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: lakerunner-pubsub-sqs
          MountPoints:
            - ContainerPath: /scratch
              ReadOnly: false
              SourceVolume: scratch
          Name: AppContainer
          PortMappings: []
          Secrets:
            - Name: STORAGE_PROFILES_ENV
              ValueFrom: !Sub
                - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/${StorageStackName}/storage_profiles
                - StorageStackName: !Ref 'StorageStackName'
            - Name: API_KEYS_ENV
              ValueFrom: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/${AWS::StackName}/api_keys'
            - Name: LRDB_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'DbSecretArn'
            - Name: CONFIGDB_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'DbSecretArn'
            - Name: LAKERUNNER_KAFKA_SASL_USERNAME
              ValueFrom: !Sub
                - '${SecretArn}:username::'
                - SecretArn: !Ref 'MSKCredentialsArn'
            - Name: LAKERUNNER_KAFKA_SASL_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'MSKCredentialsArn'
          User: '0'
      Cpu: '1024'
      ExecutionRoleArn: !GetAtt 'ExecRole.Arn'
      Family: lakerunner-pubsub-sqs-task
      Memory: '2048'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      TaskRoleArn: !GetAtt 'TaskRole.Arn'
      Volumes:
        - Name: scratch
    Type: AWS::ECS::TaskDefinition
  TaskDefLakerunnerQueryApi:
    Properties:
      ContainerDefinitions:
        - Command:
            - /app/bin/lakerunner
            - query-api
          Environment:
            - Name: OTEL_SERVICE_NAME
              Value: lakerunner-query-api
            - Name: TMPDIR
              Value: /scratch
            - Name: HOME
              Value: /scratch
            - Name: STORAGE_PROFILE_FILE
              Value: env:STORAGE_PROFILES_ENV
            - Name: API_KEYS_FILE
              Value: env:API_KEYS_ENV
            - Name: SQS_QUEUE_URL
              Value: !Sub 'https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/lakerunner-ingest-queue'
            - Name: SQS_REGION
              Value: !Ref 'AWS::Region'
            - Name: LRDB_HOST
              Value: !Ref 'DbHost'
            - Name: LRDB_PORT
              Value: !Ref 'DbPort'
            - Name: LRDB_DBNAME
              Value: lakerunner
            - Name: LRDB_USER
              Value: lakerunner
            - Name: LRDB_SSLMODE
              Value: require
            - Name: CONFIGDB_HOST
              Value: !Ref 'DbHost'
            - Name: CONFIGDB_PORT
              Value: !Ref 'DbPort'
            - Name: CONFIGDB_DBNAME
              Value: lakerunner
            - Name: CONFIGDB_USER
              Value: lakerunner
            - Name: CONFIGDB_SSLMODE
              Value: require
            - Name: LAKERUNNER_KAFKA_TLS_ENABLED
              Value: 'true'
            - Name: LAKERUNNER_KAFKA_SASL_ENABLED
              Value: 'true'
            - Name: LAKERUNNER_KAFKA_SASL_MECHANISM
              Value: SCRAM-SHA-512
            - Name: LAKERUNNER_KAFKA_TOPICS_DEFAULTS_REPLICATIONFACTOR
              Value: '2'
            - Name: ECS_WORKER_SERVICE_NAME
              Value: lakerunner-query-worker
            - Name: QUERY_WORKER_CLUSTER_NAME
              Value: !Select
                - 1
                - !Split
                  - /
                  - !Ref 'ClusterArn'
            - Name: OTEL_EXPORTER_OTLP_ENDPOINT
              Value: !If
                - EnableOtlp
                - !Ref 'OtelEndpoint'
                - !Ref 'AWS::NoValue'
            - Name: ENABLE_OTLP_TELEMETRY
              Value: !If
                - EnableOtlp
                - 'true'
                - !Ref 'AWS::NoValue'
            - Name: EXECUTION_ENVIRONMENT
              Value: ecs
            - Name: QUERY_WORKER_SERVICE_NAME
              Value: lakerunner-query-worker
          HealthCheck:
            Command:
              - /app/bin/lakerunner
              - sysinfo
            Interval: 30
            Retries: 3
            StartPeriod: 60
            Timeout: 5
          Image: !Ref 'GoServicesImage'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref 'LogGroupLakerunnerQueryApi'
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: lakerunner-query-api
          MountPoints:
            - ContainerPath: /scratch
              ReadOnly: false
              SourceVolume: scratch
          Name: AppContainer
          PortMappings:
            - ContainerPort: 7101
              Protocol: tcp
          Secrets:
            - Name: STORAGE_PROFILES_ENV
              ValueFrom: !Sub
                - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/${StorageStackName}/storage_profiles
                - StorageStackName: !Ref 'StorageStackName'
            - Name: API_KEYS_ENV
              ValueFrom: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/${AWS::StackName}/api_keys'
            - Name: LRDB_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'DbSecretArn'
            - Name: CONFIGDB_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'DbSecretArn'
            - Name: LAKERUNNER_KAFKA_SASL_USERNAME
              ValueFrom: !Sub
                - '${SecretArn}:username::'
                - SecretArn: !Ref 'MSKCredentialsArn'
            - Name: LAKERUNNER_KAFKA_SASL_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'MSKCredentialsArn'
          User: '0'
      Cpu: '1024'
      ExecutionRoleArn: !GetAtt 'ExecRole.Arn'
      Family: lakerunner-query-api-task
      Memory: '2048'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      TaskRoleArn: !GetAtt 'QueryApiTaskRole.Arn'
      Volumes:
        - Name: scratch
    Type: AWS::ECS::TaskDefinition
  TaskDefLakerunnerQueryWorker:
    Properties:
      ContainerDefinitions:
        - Command:
            - /app/bin/lakerunner
            - query-worker
          Environment:
            - Name: OTEL_SERVICE_NAME
              Value: lakerunner-query-worker
            - Name: TMPDIR
              Value: /scratch
            - Name: HOME
              Value: /scratch
            - Name: STORAGE_PROFILE_FILE
              Value: env:STORAGE_PROFILES_ENV
            - Name: API_KEYS_FILE
              Value: env:API_KEYS_ENV
            - Name: SQS_QUEUE_URL
              Value: !Sub 'https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/lakerunner-ingest-queue'
            - Name: SQS_REGION
              Value: !Ref 'AWS::Region'
            - Name: LRDB_HOST
              Value: !Ref 'DbHost'
            - Name: LRDB_PORT
              Value: !Ref 'DbPort'
            - Name: LRDB_DBNAME
              Value: lakerunner
            - Name: LRDB_USER
              Value: lakerunner
            - Name: LRDB_SSLMODE
              Value: require
            - Name: CONFIGDB_HOST
              Value: !Ref 'DbHost'
            - Name: CONFIGDB_PORT
              Value: !Ref 'DbPort'
            - Name: CONFIGDB_DBNAME
              Value: lakerunner
            - Name: CONFIGDB_USER
              Value: lakerunner
            - Name: CONFIGDB_SSLMODE
              Value: require
            - Name: LAKERUNNER_KAFKA_TLS_ENABLED
              Value: 'true'
            - Name: LAKERUNNER_KAFKA_SASL_ENABLED
              Value: 'true'
            - Name: LAKERUNNER_KAFKA_SASL_MECHANISM
              Value: SCRAM-SHA-512
            - Name: LAKERUNNER_KAFKA_TOPICS_DEFAULTS_REPLICATIONFACTOR
              Value: '2'
            - Name: OTEL_EXPORTER_OTLP_ENDPOINT
              Value: !If
                - EnableOtlp
                - !Ref 'OtelEndpoint'
                - !Ref 'AWS::NoValue'
            - Name: ENABLE_OTLP_TELEMETRY
              Value: !If
                - EnableOtlp
                - 'true'
                - !Ref 'AWS::NoValue'
          HealthCheck:
            Command:
              - /app/bin/lakerunner
              - sysinfo
            Interval: 30
            Retries: 3
            StartPeriod: 60
            Timeout: 5
          Image: !Ref 'GoServicesImage'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref 'LogGroupLakerunnerQueryWorker'
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: lakerunner-query-worker
          MountPoints:
            - ContainerPath: /scratch
              ReadOnly: false
              SourceVolume: scratch
          Name: AppContainer
          PortMappings:
            - ContainerPort: 8081
              Protocol: tcp
          Secrets:
            - Name: STORAGE_PROFILES_ENV
              ValueFrom: !Sub
                - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/${StorageStackName}/storage_profiles
                - StorageStackName: !Ref 'StorageStackName'
            - Name: API_KEYS_ENV
              ValueFrom: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/${AWS::StackName}/api_keys'
            - Name: LRDB_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'DbSecretArn'
            - Name: CONFIGDB_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'DbSecretArn'
            - Name: LAKERUNNER_KAFKA_SASL_USERNAME
              ValueFrom: !Sub
                - '${SecretArn}:username::'
                - SecretArn: !Ref 'MSKCredentialsArn'
            - Name: LAKERUNNER_KAFKA_SASL_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'MSKCredentialsArn'
          User: '0'
      Cpu: '2048'
      ExecutionRoleArn: !GetAtt 'ExecRole.Arn'
      Family: lakerunner-query-worker-task
      Memory: '8192'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      TaskRoleArn: !GetAtt 'QueryWorkerTaskRole.Arn'
      Volumes:
        - Name: scratch
    Type: AWS::ECS::TaskDefinition
  TaskDefLakerunnerRollupMetrics:
    Properties:
      ContainerDefinitions:
        - Command:
            - /app/bin/lakerunner
            - rollup-metrics
          Environment:
            - Name: OTEL_SERVICE_NAME
              Value: lakerunner-rollup-metrics
            - Name: TMPDIR
              Value: /scratch
            - Name: HOME
              Value: /scratch
            - Name: STORAGE_PROFILE_FILE
              Value: env:STORAGE_PROFILES_ENV
            - Name: API_KEYS_FILE
              Value: env:API_KEYS_ENV
            - Name: SQS_QUEUE_URL
              Value: !Sub 'https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/lakerunner-ingest-queue'
            - Name: SQS_REGION
              Value: !Ref 'AWS::Region'
            - Name: LRDB_HOST
              Value: !Ref 'DbHost'
            - Name: LRDB_PORT
              Value: !Ref 'DbPort'
            - Name: LRDB_DBNAME
              Value: lakerunner
            - Name: LRDB_USER
              Value: lakerunner
            - Name: LRDB_SSLMODE
              Value: require
            - Name: CONFIGDB_HOST
              Value: !Ref 'DbHost'
            - Name: CONFIGDB_PORT
              Value: !Ref 'DbPort'
            - Name: CONFIGDB_DBNAME
              Value: lakerunner
            - Name: CONFIGDB_USER
              Value: lakerunner
            - Name: CONFIGDB_SSLMODE
              Value: require
            - Name: LAKERUNNER_KAFKA_TLS_ENABLED
              Value: 'true'
            - Name: LAKERUNNER_KAFKA_SASL_ENABLED
              Value: 'true'
            - Name: LAKERUNNER_KAFKA_SASL_MECHANISM
              Value: SCRAM-SHA-512
            - Name: LAKERUNNER_KAFKA_TOPICS_DEFAULTS_REPLICATIONFACTOR
              Value: '2'
            - Name: OTEL_EXPORTER_OTLP_ENDPOINT
              Value: !If
                - EnableOtlp
                - !Ref 'OtelEndpoint'
                - !Ref 'AWS::NoValue'
            - Name: ENABLE_OTLP_TELEMETRY
              Value: !If
                - EnableOtlp
                - 'true'
                - !Ref 'AWS::NoValue'
          HealthCheck:
            Command:
              - /app/bin/lakerunner
              - sysinfo
            Interval: 30
            Retries: 3
            StartPeriod: 60
            Timeout: 5
          Image: !Ref 'GoServicesImage'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref 'LogGroupLakerunnerRollupMetrics'
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: lakerunner-rollup-metrics
          MountPoints:
            - ContainerPath: /scratch
              ReadOnly: false
              SourceVolume: scratch
          Name: AppContainer
          PortMappings: []
          Secrets:
            - Name: STORAGE_PROFILES_ENV
              ValueFrom: !Sub
                - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/${StorageStackName}/storage_profiles
                - StorageStackName: !Ref 'StorageStackName'
            - Name: API_KEYS_ENV
              ValueFrom: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/${AWS::StackName}/api_keys'
            - Name: LRDB_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'DbSecretArn'
            - Name: CONFIGDB_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'DbSecretArn'
            - Name: LAKERUNNER_KAFKA_SASL_USERNAME
              ValueFrom: !Sub
                - '${SecretArn}:username::'
                - SecretArn: !Ref 'MSKCredentialsArn'
            - Name: LAKERUNNER_KAFKA_SASL_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'MSKCredentialsArn'
          User: '0'
      Cpu: '1024'
      ExecutionRoleArn: !GetAtt 'ExecRole.Arn'
      Family: lakerunner-rollup-metrics-task
      Memory: '2048'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      TaskRoleArn: !GetAtt 'TaskRole.Arn'
      Volumes:
        - Name: scratch
    Type: AWS::ECS::TaskDefinition
  TaskDefLakerunnerSweeper:
    Properties:
      ContainerDefinitions:
        - Command:
            - /app/bin/lakerunner
            - sweeper
          Environment:
            - Name: OTEL_SERVICE_NAME
              Value: lakerunner-sweeper
            - Name: TMPDIR
              Value: /scratch
            - Name: HOME
              Value: /scratch
            - Name: STORAGE_PROFILE_FILE
              Value: env:STORAGE_PROFILES_ENV
            - Name: API_KEYS_FILE
              Value: env:API_KEYS_ENV
            - Name: SQS_QUEUE_URL
              Value: !Sub 'https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/lakerunner-ingest-queue'
            - Name: SQS_REGION
              Value: !Ref 'AWS::Region'
            - Name: LRDB_HOST
              Value: !Ref 'DbHost'
            - Name: LRDB_PORT
              Value: !Ref 'DbPort'
            - Name: LRDB_DBNAME
              Value: lakerunner
            - Name: LRDB_USER
              Value: lakerunner
            - Name: LRDB_SSLMODE
              Value: require
            - Name: CONFIGDB_HOST
              Value: !Ref 'DbHost'
            - Name: CONFIGDB_PORT
              Value: !Ref 'DbPort'
            - Name: CONFIGDB_DBNAME
              Value: lakerunner
            - Name: CONFIGDB_USER
              Value: lakerunner
            - Name: CONFIGDB_SSLMODE
              Value: require
            - Name: LAKERUNNER_KAFKA_TLS_ENABLED
              Value: 'true'
            - Name: LAKERUNNER_KAFKA_SASL_ENABLED
              Value: 'true'
            - Name: LAKERUNNER_KAFKA_SASL_MECHANISM
              Value: SCRAM-SHA-512
            - Name: LAKERUNNER_KAFKA_TOPICS_DEFAULTS_REPLICATIONFACTOR
              Value: '2'
            - Name: OTEL_EXPORTER_OTLP_ENDPOINT
              Value: !If
                - EnableOtlp
                - !Ref 'OtelEndpoint'
                - !Ref 'AWS::NoValue'
            - Name: ENABLE_OTLP_TELEMETRY
              Value: !If
                - EnableOtlp
                - 'true'
                - !Ref 'AWS::NoValue'
          HealthCheck:
            Command:
              - /app/bin/lakerunner
              - sysinfo
            Interval: 30
            Retries: 3
            StartPeriod: 60
            Timeout: 5
          Image: !Ref 'GoServicesImage'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref 'LogGroupLakerunnerSweeper'
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: lakerunner-sweeper
          MountPoints:
            - ContainerPath: /scratch
              ReadOnly: false
              SourceVolume: scratch
          Name: AppContainer
          PortMappings: []
          Secrets:
            - Name: STORAGE_PROFILES_ENV
              ValueFrom: !Sub
                - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/${StorageStackName}/storage_profiles
                - StorageStackName: !Ref 'StorageStackName'
            - Name: API_KEYS_ENV
              ValueFrom: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/${AWS::StackName}/api_keys'
            - Name: LRDB_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'DbSecretArn'
            - Name: CONFIGDB_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'DbSecretArn'
            - Name: LAKERUNNER_KAFKA_SASL_USERNAME
              ValueFrom: !Sub
                - '${SecretArn}:username::'
                - SecretArn: !Ref 'MSKCredentialsArn'
            - Name: LAKERUNNER_KAFKA_SASL_PASSWORD
              ValueFrom: !Sub
                - '${SecretArn}:password::'
                - SecretArn: !Ref 'MSKCredentialsArn'
          User: '0'
      Cpu: '256'
      ExecutionRoleArn: !GetAtt 'ExecRole.Arn'
      Family: lakerunner-sweeper-task
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      TaskRoleArn: !GetAtt 'TaskRole.Arn'
      Volumes:
        - Name: scratch
    Type: AWS::ECS::TaskDefinition
  TaskFromAlb7101:
    Properties:
      Description: ALB to tasks 7101
      FromPort: 7101
      GroupId: !Ref 'TaskSecurityGroupId'
      IpProtocol: tcp
      SourceSecurityGroupId: !Ref 'AlbSecurityGroup'
      ToPort: 7101
    Type: AWS::EC2::SecurityGroupIngress
  TaskRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: '2012-10-17'
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Effect: Allow
                Resource:
                  - !Ref 'BucketArn'
                  - !Sub
                    - ${BucketArn}/*
                    - BucketArn: !Ref 'BucketArn'
              - Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:lakerunner-*'
              - Action:
                  - secretsmanager:GetSecretValue
                Effect: Allow
                Resource:
                  - !Sub
                    - ${SecretArn}*
                    - SecretArn: !Ref 'DbSecretArn'
                  - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${AWS::StackName}-*'
              - Action:
                  - elasticfilesystem:ClientMount
                  - elasticfilesystem:ClientWrite
                  - elasticfilesystem:ClientRootAccess
                  - elasticfilesystem:DescribeFileSystems
                  - elasticfilesystem:DescribeMountTargets
                  - elasticfilesystem:DescribeAccessPoints
                Effect: Allow
                Resource: '*'
            Version: '2012-10-17'
          PolicyName: S3AndSQSAccess
      RoleName: !Sub '${AWS::StackName}-task-role'
    Type: AWS::IAM::Role
  Tg7101:
    Properties:
      HealthCheckIntervalSeconds: 5
      HealthCheckPath: /ready
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 2
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: '200'
      Port: 7101
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: 'false'
        - Key: deregistration_delay.timeout_seconds
          Value: '5'
      TargetType: ip
      UnhealthyThresholdCount: 2
      VpcId: !Ref 'VpcId'
    Type: AWS::ElasticLoadBalancingV2::TargetGroup

