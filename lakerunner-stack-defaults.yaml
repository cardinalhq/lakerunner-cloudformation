# Default configuration for core Lakerunner deployment
# This file contains configuration for the main three stacks: common, migration, and services

# API Keys configuration
api_keys:
  - organization_id: 12340000-0000-4000-8000-000000000000
    keys:
      - f70603aa00e6f67999cc66e336134887

# Storage Profiles configuration
storage_profiles:
  - bucket: "${BUCKET_NAME}"  # Will be replaced with actual bucket name
    cloud_provider: aws
    collector_name: lakerunner
    insecure_tls: false
    instance_num: 1
    organization_id: 12340000-0000-4000-8000-000000000000
    region: "${AWS_REGION}"  # Will be replaced with actual region
    use_path_style: true

# Container Images configuration
images:
  migration: "public.ecr.aws/cardinalhq.io/lakerunner:v1.2.2"
  go_services: "public.ecr.aws/cardinalhq.io/lakerunner:v1.2.2"
  query_api: "public.ecr.aws/cardinalhq.io/lakerunner/query-api:v1.2.1"
  query_worker: "public.ecr.aws/cardinalhq.io/lakerunner/query-worker:v1.2.1"

# Service configurations for core Lakerunner services
services:
  lakerunner-pubsub-sqs:
    command: ["/app/bin/lakerunner", "pubsub", "sqs"]
    cpu: 1024
    memory_mib: 2048
    replicas: 1
    health_check:
      type: "go"
      command: ["/app/bin/lakerunner", "sysinfo"]
    environment: {}

  lakerunner-ingest-logs:
    command: ["/app/bin/lakerunner", "ingest-logs"]
    cpu: 1024
    memory_mib: 2048
    replicas: 2
    health_check:
      type: "go"
      command: ["/app/bin/lakerunner", "sysinfo"]
    environment: {}

  lakerunner-ingest-metrics:
    command: ["/app/bin/lakerunner", "ingest-metrics"]
    cpu: 1024
    memory_mib: 2048
    replicas: 1
    health_check:
      type: "go"
      command: ["/app/bin/lakerunner", "sysinfo"]
    environment: {}

  lakerunner-compact-logs:
    command: ["/app/bin/lakerunner", "compact-logs"]
    cpu: 1024
    memory_mib: 2048
    replicas: 4
    health_check:
      type: "go"
      command: ["/app/bin/lakerunner", "sysinfo"]
    environment: {}

  lakerunner-compact-metrics:
    command: ["/app/bin/lakerunner", "compact-metrics"]
    cpu: 1024
    memory_mib: 2048
    replicas: 1
    health_check:
      type: "go"
      command: ["/app/bin/lakerunner", "sysinfo"]
    environment: {}

  lakerunner-rollup-metrics:
    command: ["/app/bin/lakerunner", "rollup-metrics"]
    cpu: 1024
    memory_mib: 2048
    replicas: 1
    health_check:
      type: "go"
      command: ["/app/bin/lakerunner", "sysinfo"]
    environment: {}

  lakerunner-sweeper:
    command: ["/app/bin/lakerunner", "sweeper"]
    cpu: 256
    memory_mib: 512
    replicas: 1
    health_check:
      type: "go"
      command: ["/app/bin/lakerunner", "sysinfo"]
    environment: {}

  lakerunner-query-api:
    image: "public.ecr.aws/cardinalhq.io/lakerunner/query-api:v1.2.1"
    cpu: 2048
    memory_mib: 8192
    replicas: 1
    ingress:
      port: 7101
      attach_alb: true
      health_check_path: "/ready"
    environment:
      EXECUTION_ENVIRONMENT: "ecs"
      QUERY_STACK: "local"
      METRIC_PREFIX: "lakerunner-query-api"
      NUM_MIN_QUERY_WORKERS: "8"
      NUM_MAX_QUERY_WORKERS: "8"
      SPRING_PROFILES_ACTIVE: "aws"
    health_check:
      type: "scala"
      command: ["curl", "-f", "http://localhost:7101/ready"]
    bind_mounts:
      - container_path: "/db"
        source_volume: "scratch"
        read_only: false

# Kafka topic setup configuration
kafka_topics:
  enabled: true
  ensure_topics:
    - name: "lakerunner.objstore.ingest.logs"
      partitions: 6
      replicationFactor: 3
    - name: "lakerunner.objstore.ingest.metrics"
      partitions: 12
      replicationFactor: 3
    - name: "lakerunner.objstore.ingest.traces"
      partitions: 6
      replicationFactor: 3
    - name: "lakerunner.segments.logs.compact"
      partitions: 3
      replicationFactor: 3
      config:
        cleanup.policy: compact
    - name: "lakerunner.segments.metrics.compact"
      partitions: 3
      replicationFactor: 3
      config:
        cleanup.policy: compact
    - name: "lakerunner.segments.metrics.rollup"
      partitions: 3
      replicationFactor: 3
    - name: "lakerunner.segments.traces.compact"
      partitions: 3
      replicationFactor: 3
      config:
        cleanup.policy: compact

  lakerunner-query-worker:
    image: "public.ecr.aws/cardinalhq.io/lakerunner/query-worker:v1.2.1"
    cpu: 2048
    memory_mib: 8192
    replicas: 8
    ingress:
      port: 7101
      description: "From Query API"
    environment:
      EXECUTION_ENVIRONMENT: "ecs"
      METRIC_PREFIX: "lakerunner-query-worker"
      SPRING_PROFILES_ACTIVE: "aws"
    health_check:
      type: "scala"
      command: ["curl", "-f", "http://localhost:7101/ready"]
    bind_mounts:
      - container_path: "/db"
        source_volume: "scratch"
        read_only: false
