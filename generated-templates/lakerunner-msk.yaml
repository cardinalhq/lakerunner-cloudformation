Conditions:
  CreateTaskRole: !Equals
    - !Ref 'ExistingTaskRoleArn'
    - ''
  UseExistingTaskRole: !Not
    - !Equals
      - !Ref 'ExistingTaskRoleArn'
      - ''
Description: Amazon MSK (Kafka) cluster for Lakerunner.
Outputs:
  MSKClusterArn:
    Description: MSK cluster ARN
    Export:
      Name: !Sub '${AWS::StackName}-MSKClusterArn'
    Value: !GetAtt 'MSKCluster.Arn'
  MSKClusterName:
    Description: MSK cluster name
    Export:
      Name: !Sub '${AWS::StackName}-MSKClusterName'
    Value: !Ref 'MSKCluster'
  TaskRoleArn:
    Description: Task role ARN for MSK access (created or existing)
    Export:
      Name: !Sub '${AWS::StackName}-TaskRoleArn'
    Value: !If
      - UseExistingTaskRole
      - !Ref 'ExistingTaskRoleArn'
      - !GetAtt 'MSKTaskRole.Arn'
Parameters:
  ExistingTaskRoleArn:
    Default: ''
    Description: 'OPTIONAL: Existing task role ARN to attach MSK permissions to. Leave blank to create a new role.'
    Type: String
  PrivateSubnets:
    Description: 'REQUIRED: Private subnet IDs for the MSK cluster (minimum 2, maximum 3).'
    Type: List<AWS::EC2::Subnet::Id>
  VpcId:
    Description: 'REQUIRED: VPC ID where MSK cluster will be deployed.'
    Type: AWS::EC2::VPC::Id
Resources:
  MSKCluster:
    Properties:
      BrokerNodeGroupInfo:
        ClientSubnets: !Ref 'PrivateSubnets'
        InstanceType: kafka.t3.small
        SecurityGroups:
          - !Ref 'MSKSecurityGroup'
        StorageInfo:
          EBSStorageInfo:
            VolumeSize: 100
      ClientAuthentication:
        Tls:
          Enabled: false
      ClusterName: !Sub '${AWS::StackName}-msk-cluster'
      EncryptionInfo:
        EncryptionAtRest:
          DataVolumeKMSKeyId: alias/aws/msk
        EncryptionInTransit:
          ClientBroker: PLAINTEXT
          InCluster: true
      KafkaVersion: 2.8.1
      NumberOfBrokerNodes: 2
      Tags:
        Environment: !Ref 'AWS::StackName'
        ManagedBy: Lakerunner
        Name: !Sub '${AWS::StackName}-msk-cluster'
    Type: AWS::MSK::Cluster
  MSKSecurityGroup:
    Properties:
      GroupDescription: Security group for MSK cluster
      SecurityGroupIngress:
        - CidrIp: 10.0.0.0/8
          Description: Kafka plaintext
          FromPort: 9092
          IpProtocol: tcp
          ToPort: 9092
        - CidrIp: 10.0.0.0/8
          Description: Kafka TLS
          FromPort: 9094
          IpProtocol: tcp
          ToPort: 9094
        - CidrIp: 10.0.0.0/8
          Description: Zookeeper
          FromPort: 2181
          IpProtocol: tcp
          ToPort: 2181
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-msk-sg'
        - Key: ManagedBy
          Value: Lakerunner
      VpcId: !Ref 'VpcId'
    Type: AWS::EC2::SecurityGroup
  MSKTaskPolicy:
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - kafka:DescribeCluster
              - kafka:DescribeClusterV2
              - kafka:GetBootstrapBrokers
              - kafka-cluster:Connect
              - kafka-cluster:AlterCluster
              - kafka-cluster:DescribeCluster
            Effect: Allow
            Resource: !GetAtt 'MSKCluster.Arn'
          - Action:
              - kafka-cluster:*Topic*
              - kafka-cluster:WriteData
              - kafka-cluster:ReadData
            Effect: Allow
            Resource: !Sub
              - ${MSKClusterArn}/*
              - MSKClusterArn: !GetAtt 'MSKCluster.Arn'
          - Action:
              - kafka-cluster:AlterGroup
              - kafka-cluster:DescribeGroup
            Effect: Allow
            Resource: !Sub
              - ${MSKClusterArn}/*
              - MSKClusterArn: !GetAtt 'MSKCluster.Arn'
        Version: '2012-10-17'
      PolicyName: MSKAccess
      Roles:
        - !If
          - UseExistingTaskRole
          - !Select
            - 1
            - !Split
              - /
              - !Ref 'ExistingTaskRoleArn'
          - !Ref 'MSKTaskRole'
    Type: AWS::IAM::Policy
  MSKTaskRole:
    Condition: CreateTaskRole
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: '2012-10-17'
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lakerunner/*'
                  - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}-*'
            Version: '2012-10-17'
          PolicyName: BaseECSTaskPolicy
      RoleName: !Sub '${AWS::StackName}-msk-task-role'
    Type: AWS::IAM::Role

